name: Build and Publish PowerDNS Docker Images

on:
  push:
    branches:
      - main

jobs:
  # Step 1: Calculate version and create release
  version-and-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate next version
        id: get_version
        run: |
          # Get latest tag or default to v0.0.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Extract version parts
          if [[ $LATEST_TAG =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
          else
            MAJOR=0
            MINOR=0
            PATCH=0
          fi
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
          
          echo "Next version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: PowerDNS Docker ${{ steps.get_version.outputs.version }}
          body: |
            ## PowerDNS Docker Release ${{ steps.get_version.outputs.version }}
            
            This release includes:
            - PowerDNS Authoritative Server with MySQL backend
            - PowerDNS Admin web interface with production-ready Gunicorn server
            - MariaDB database service
            
            ### Docker Images:
            - `processton/power-dns:${{ steps.get_version.outputs.version }}`
            - `processton/pdns-admin:${{ steps.get_version.outputs.version }}`
            
            ### Usage:
            ```bash
            docker-compose up -d
            ```
            
            Access PowerDNS Admin at http://localhost:80 with credentials:
            - Username: admin
            - Password: admin123
          draft: false
          prerelease: false

  # Step 2: Build and publish PowerDNS Server
  build-powerdns:
    needs: version-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push PowerDNS Server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            processton/power-dns:${{ needs.version-and-release.outputs.version }}
            processton/power-dns:latest
          platforms: linux/amd64,linux/arm64

  # Step 3: Build and publish PowerDNS Admin (simultaneous with PowerDNS Server)
  build-pdns-admin:
    needs: version-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push PowerDNS Admin
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.admin
          push: true
          tags: |
            processton/pdns-admin:${{ needs.version-and-release.outputs.version }}
            processton/pdns-admin:latest
          platforms: linux/amd64,linux/arm64
